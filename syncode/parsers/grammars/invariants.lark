start: "```" "\n" invariants "```"

invariants: invariant+ 

invariant: "loop" "invariant" pred ";" "\n"

STRING: /"([^"\\]|\\.)*"/

INTEGER: /[0-9]+/

REAL: /[0-9]+\.[0-9]+/

CHAR: /'([^'\\]|\\.)'/

TRUE: "\\true"

FALSE: "\\false"

IDENTIFIER.-1: /[a-zA-Z_][a-zA-Z0-9_]*/

unary_logic_op: "~" 

bin_logic_op: "&&" | "||" | "==>" | "<==>" 

rel_arith_op: "==" | "!=" | "<" | "<=" | ">" | ">="

unary_arith_op: "-"

bin_arith_op: "+" | "-" | "*" | "/" | "%" | "^"

expr: INTEGER 
    | REAL 
    | CHAR 
    | STRING 
    | IDENTIFIER 
    | IDENTIFIER  "("  expr  (","  expr)*  ")"
    | "("  expr  ")" 
    | unary_arith_op  expr 
    | expr  bin_arith_op  expr 
    | expr  "?"  expr  ":"  expr

pred: TRUE 
    | FALSE 
    | "("  pred  ")"
    | expr
    | unary_logic_op  pred 
    | pred  bin_logic_op  pred 
    | expr  rel_arith_op  expr

%ignore /[\t ]/
